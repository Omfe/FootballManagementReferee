/*
	FRMTournament.h
	The implementation of properties and methods for the FRMTournament object.
	Generated by SudzC.com
*/
#import "FRMTournament.h"

#import "FRMArrayOfMatch.h"
#import "FRMArrayOfReferee.h"
#import "FRMArrayOfTeam.h"
@implementation FRMTournament
	@synthesize Id = _Id;
	@synthesize Matches = _Matches;
	@synthesize Name = _Name;
	@synthesize Referees = _Referees;
	@synthesize Teams = _Teams;

	- (id) init
	{
		if(self = [super init])
		{
			self.Matches = [[NSMutableArray alloc] init];
			self.Name = nil;
			self.Referees = [[NSMutableArray alloc] init];
			self.Teams = [[NSMutableArray alloc] init];

		}
		return self;
	}

	+ (FRMTournament*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Id = [[Soap getNodeValue: node withName: @"Id"] intValue];
			self.Matches = [[FRMArrayOfMatch createWithNode: [Soap getNode: node withName: @"Matches"]] object];
			self.Name = [Soap getNodeValue: node withName: @"Name"];
			self.Referees = [[FRMArrayOfReferee createWithNode: [Soap getNode: node withName: @"Referees"]] object];
			self.Teams = [[FRMArrayOfTeam createWithNode: [Soap getNode: node withName: @"Teams"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Tournament"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<Id>%@</Id>", [NSString stringWithFormat: @"%i", self.Id]];
		if (self.Matches != nil && self.Matches.count > 0) {
			[s appendFormat: @"<Matches>%@</Matches>", [FRMArrayOfMatch serialize: self.Matches]];
		} else {
			[s appendString: @"<Matches/>"];
		}
		if (self.Name != nil) [s appendFormat: @"<Name>%@</Name>", [[self.Name stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Referees != nil && self.Referees.count > 0) {
			[s appendFormat: @"<Referees>%@</Referees>", [FRMArrayOfReferee serialize: self.Referees]];
		} else {
			[s appendString: @"<Referees/>"];
		}
		if (self.Teams != nil && self.Teams.count > 0) {
			[s appendFormat: @"<Teams>%@</Teams>", [FRMArrayOfTeam serialize: self.Teams]];
		} else {
			[s appendString: @"<Teams/>"];
		}

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[FRMTournament class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end

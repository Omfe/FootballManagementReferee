/*
	FRMMatch.h
	The implementation of properties and methods for the FRMMatch object.
	Generated by SudzC.com
*/
#import "FRMMatch.h"

#import "FRMArrayOfCard.h"
#import "FRMArrayOfGoal.h"
#import "FRMArrayOfPlayer.h"
#import "FRMArrayOfReferee.h"
#import "FRMTeam.h"
#import "FRMTeam.h"
#import "FRMTournament.h"
@implementation FRMMatch
	@synthesize Cards = _Cards;
	@synthesize Goals = _Goals;
	@synthesize Id = _Id;
	@synthesize MatchDate = _MatchDate;
	@synthesize Players = _Players;
	@synthesize Referees = _Referees;
	@synthesize Team = _Team;
	@synthesize Team1 = _Team1;
	@synthesize Tournament = _Tournament;

	- (id) init
	{
		if(self = [super init])
		{
			self.Cards = [[NSMutableArray alloc] init];
			self.Goals = [[NSMutableArray alloc] init];
			self.MatchDate = nil;
			self.Players = [[NSMutableArray alloc] init];
			self.Referees = [[NSMutableArray alloc] init];
			self.Team = nil; // [[FRMTeam alloc] init];
			self.Team1 = nil; // [[FRMTeam alloc] init];
			self.Tournament = nil; // [[FRMTournament alloc] init];

		}
		return self;
	}

	+ (FRMMatch*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[self alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.Cards = [[FRMArrayOfCard createWithNode: [Soap getNode: node withName: @"Cards"]] object];
			self.Goals = [[FRMArrayOfGoal createWithNode: [Soap getNode: node withName: @"Goals"]] object];
			self.Id = [[Soap getNodeValue: node withName: @"Id"] intValue];
			self.MatchDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"MatchDate"]];
			self.Players = [[FRMArrayOfPlayer createWithNode: [Soap getNode: node withName: @"Players"]] object];
			self.Referees = [[FRMArrayOfReferee createWithNode: [Soap getNode: node withName: @"Referees"]] object];
			self.Team = [[FRMTeam createWithNode: [Soap getNode: node withName: @"Team"]] object];
			self.Team1 = [[FRMTeam createWithNode: [Soap getNode: node withName: @"Team1"]] object];
			self.Tournament = [[FRMTournament createWithNode: [Soap getNode: node withName: @"Tournament"]] object];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"Match"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.Cards != nil && self.Cards.count > 0) {
			[s appendFormat: @"<Cards>%@</Cards>", [FRMArrayOfCard serialize: self.Cards]];
		} else {
			[s appendString: @"<Cards/>"];
		}
		if (self.Goals != nil && self.Goals.count > 0) {
			[s appendFormat: @"<Goals>%@</Goals>", [FRMArrayOfGoal serialize: self.Goals]];
		} else {
			[s appendString: @"<Goals/>"];
		}
		[s appendFormat: @"<Id>%@</Id>", [NSString stringWithFormat: @"%i", self.Id]];
		if (self.MatchDate != nil) [s appendFormat: @"<MatchDate>%@</MatchDate>", [Soap getDateString: self.MatchDate]];
		if (self.Players != nil && self.Players.count > 0) {
			[s appendFormat: @"<Players>%@</Players>", [FRMArrayOfPlayer serialize: self.Players]];
		} else {
			[s appendString: @"<Players/>"];
		}
		if (self.Referees != nil && self.Referees.count > 0) {
			[s appendFormat: @"<Referees>%@</Referees>", [FRMArrayOfReferee serialize: self.Referees]];
		} else {
			[s appendString: @"<Referees/>"];
		}
		if (self.Team != nil) [s appendString: [self.Team serialize: @"Team"]];
		if (self.Team1 != nil) [s appendString: [self.Team1 serialize: @"Team1"]];
		if (self.Tournament != nil) [s appendString: [self.Tournament serialize: @"Tournament"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[FRMMatch class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
